// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(uuid())
  googleUserId     String        @unique
  firstName        String        @default("")
  lastName         String        @default("")
  email            String        @unique
  profilePicture   String        @default("")
  birthday         String        @default("")
  bio              String        @default("")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  animals          Animal[]
  sentMessages     Message[]     @relation("SentMessages")
  receivedMessages Message[]     @relation("ReceivedMessages")
  subscription     Subscription?
}

model Subscription {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  stripeSubscriptionItemId String
  stripeSubscriptionId     String
  stripeCustomerId         String    @unique
  stripeCancelAtPeriodEnd  DateTime?
  tier                     String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Animal {
  id               String   @id @default(uuid())
  firstName        String   @default("")
  birthday         String   @default("")
  species          String   @default("")
  breed            String   @default("")
  weight           Int      @default(0)
  sex              String   @default("")
  bio              String   @default("")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  images           Image[]
  initiatedMatches Match[]  @relation("InitiatedMatches")
  receivedMatches  Match[]  @relation("ReceivedMatches")
}

model Message {
  id         String   @id @default(uuid())
  content    String   @default("")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  senderId   String
  receiverId String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model Match {
  id                String   @id @default(uuid())
  status            String   @default("") // pending, accepted, declined
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  animalInitiatorId String
  animalMatchedId   String
  animalInitiator   Animal   @relation("InitiatedMatches", fields: [animalInitiatorId], references: [id])
  animalMatched     Animal   @relation("ReceivedMatches", fields: [animalMatchedId], references: [id])
}


model Image {
  id        String   @id @default(uuid())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  animalId  String
  animal    Animal   @relation(fields: [animalId], references: [id])
}
